<?php

  /**
   * Implements hook_init().
   */
function wanderitis_init() {
  if (drupal_is_front_page() && !drupal_is_cli()) {
    // Redirect to path with language prefix if necessary.
    if (!(url('<front>') == '/' . request_path())) {
      drupal_add_http_header('Cache-Control', 'no-cache, must-revalidate, post-check=0, pre-check=0');
      drupal_goto('<front>', array(), 301);
    }
  }
}

/**
 * Implements hook_jcarousel_skin_info().
 */
function wanderitis_jcarousel_skin_info() {
  $skins = array();

  $skins['wantermanitis_frontpage'] = array(
    'title' => t('wanderitis: Frontpage'),
    'file' => 'theme/jcarousel_frontpage/jcarousel-frontpage.css',
  );
  return $skins;
}

/**
 * Implements hook_field_formatter_info_alter().
 */
function wanderitis_field_formatter_info_alter(&$info) {
  $info['colorbox']['field types'][] = 'file';
  $info['slideshow']['field types'][] = 'file';
  $info['cycle']['field types'][] = 'file';
}

/**
 * Implements hook_entity_info_alter().
 *
 * Add view modes to the file entity type, appropriate for displaying media.
 */
function wanderitis_entity_info_alter(&$entity_info) {
  $entity_info['file']['view modes']['wanderitis_header'] = array('label' => t('Wanderitis: Header'), 'custom settings' => TRUE);
}

/**
 * Implements hook_default_layout_breakpoint_alter().
 */
function wanderitis_default_layout_breakpoint_alter(&$breakpoints) {
  // Disable non wanderitis breakpoints.
  foreach ($breakpoints as $name => &$breakpoint) {
    if (stristr($name, 'wanderitis') === FALSE) {
      $breakpoint->disabled = TRUE;
    }
  }
}

/**
 * Implements hook_boot().
 *
 * Just ensure this module is load very early.
 */
function wanderitis_boot() {
}


/**
 * Implements hook_system_info_alter().
 *
 * Enforce compatibility between certain modules because we don't have the
 * version information as we use git repositories.
 *
 * @param $info
 *   The module/theme info array we're altering.
 * @param $file
 *   An object describing the filesystem location of the module/theme.
 * @param $type
 *   Can be module or theme.
 */
function wanderitis_system_info_alter(&$info, $file, $type = NULL) {
  if ($type == 'module') {
    switch ($file->name) {
      // Services REST Server dependency.
      case 'libraries':
        // We use 2.x-dev, so set a 2.x version.
        $info['version'] = '7.x-2.0';
        break;
    }
  }
}

/**
 * Implements hook_date_format_types().
 */
function wanderitis_date_format_types() {
  return array(
    'date_only' => t('Date Only'),
    'medium_date_only' => t('Medium Date Only')
  );
}

/**
 * Implements hook_date_formats()
 */
function wanderitis_date_formats() {
  return array(
    array(
      'type' => 'date_only',
      'format' => 'd/m/Y',
      'locales' => array('en', 'en-gb'),
    ),
    array(
      'type' => 'date_only',
      'format' => 'd.m.Y',
      'locales' => array('de', 'fr', 'it', 'es'),
    ),
    array(
      'type' => 'medium_date_only',
      'format' => 'D, d.m.Y',
      'locales' => array('de', 'fr', 'es', 'en', 'en-gb')
    ),
    array(
      'type' => 'medium_date_only',
      'format' => 'D, d/m/Y',
      'locales' => array('it')
    ),
    array(
      'type' => 'long',
      'format' => 'l, j. F Y - H:i',
      'locales' => array('de'),
    ),
    array(
      'type' => 'medium',
      'format' => 'D, d.m.Y - H:i',
      'locales' => array('de', 'fr', 'it', 'es'),
    ),
    array(
      'type' => 'medium',
      'format' => 'D, d/m/Y - H:i',
      'locales' => array('en', 'en-gb'),
    ),
    array(
      'type' => 'short',
      'format' => 'd.m.Y - H:i',
      'locales' => array('de', 'fr', 'it', 'es'),
    ),
    array(
      'type' => 'short',
      'format' => 'd/m/Y - H:i',
      'locales' => array('en', 'en-gb'),
    ),
  );
}
